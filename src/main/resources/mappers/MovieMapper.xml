<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.induk.cinema.repository.MovieRepository">
    <resultMap id="resultMovie" type="Movie">
        <id property="id" column="id" />
        <result property="poster" column="poster" />
        <result property="title" column="title" />
        <result property="language" column="language" />
        <result property="showTimes" column="show_times" />
        <result property="releaseDate" column="release_date" />
        <result property="rating" column="rating" />
        <result property="screeningFormat" column="screening_format" />
        <association property="director" column="director_id" resultMap="directorMap" />
        <association property="genre" column="genre_id" resultMap="genreMap" />
    </resultMap>

    <resultMap id="directorMap" type="Director">
        <id property="id" column="directorId" />
        <result property="name" column="directorName" />
    </resultMap>

    <resultMap id="genreMap" type="Genre">
        <id property="id" column="genreId" />
        <result property="name" column="genreName" />
    </resultMap>

    <select id="findAll" resultMap="resultMovie">
        select m.*, d.name as directorName, g.name as genreName, d.id as directorId, g.id as genreId
        from movie m
        inner join director d on m.director_id = d.id
        inner join genre g on m.genre_id = g.id
    </select>

    <select id="findById" resultMap="resultMovie" parameterType="Long">
        select m.*, d.name as directorName, g.name as genreName, d.id as directorId, g.id as genreId
        from movie m
        inner join director d on m.director_id = d.id
        inner join genre g on m.genre_id = g.id
        where m.id = #{id}
    </select>

    <update id="update" parameterType="com.induk.cinema.dto.MovieForm">
        update movie
        set poster=#{poster}, title=#{title}, language=#{language}, show_times=#{showTimes},
            release_date=#{releaseDate}, rating=#{rating}, screening_format=#{joinFormat},
            director_id=#{directorId}, genre_id=#{genreId}
        where id=#{id}
    </update>

    <insert id="save" useGeneratedKeys="true" keyProperty="id" parameterType="com.induk.cinema.dto.MovieForm">
        insert into movie(poster, title, language, show_times, release_date, rating, screening_format, director_id, genre_id)
        values (#{poster}, #{title}, #{language}, #{showTimes}, #{releaseDate}, #{rating}, #{joinFormat}, #{directorId}, #{genreId})
    </insert>

    <delete id="delete" parameterType="Long">
        delete from movie where id = #{id};
    </delete>
</mapper>
